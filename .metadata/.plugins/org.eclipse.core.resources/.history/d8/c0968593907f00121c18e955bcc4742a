package villa.loaders;

import java.io.File;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Scanner;

public class TextRoomLoader
{
	public static void main(String[] args)
	{
		load("data/rooms/test/testroom_01.dat");
	}//END main
	
	public static void load(String roompath)
	{
		HashSet<String> commands = null;
		try
		{
			//Extract from file
			Scanner in = new Scanner(new File(roompath));
			commands = getCommands(in);
			in.close();
			
			//Extract from commands
			
		}//yrt
		catch (Exception e)
		{
			System.err.println(e.getStackTrace());
			System.exit(1);
		}//hctac
		
		runCommands(commands);
	}//END load
	
	/* Commands */	
	private static HashSet<String> getCommands(Scanner in)
	{
		HashSet<String> commands = new HashSet<String>();
		
		in.useDelimiter(";");
		while(in.hasNext())
		{
			String command = in.next();
			command = command.replaceAll("\\s", "");
			commands.add(command);
		}//elihw
		
		return commands;
	}//END getCommands
	
	private static void runCommands(HashSet<String> commands)
	{
		Iterator<String> iter = commands.iterator();
		while(iter.hasNext())
		{
			String command = iter.next();
			String[] tokens = command.split("<");
			command(tokens);
		}//elihw
	}//END initCommands
	
	private static void command(String[] command_tokens)
	{
		if(command_tokens[0].equals("createmap"));
		{
			prepare_createmap(command_tokens[1]);
		}//fi
	}//END command
	
	//Create Map
	private static class Map_Holder
	{
		public int width, height;
		public char[] area;
		
		public Map_Holder(int width, int height, char[] area)
		{
			this.width = width;
			this.height = height;
			this.area = area;
		}
	}//END class Map_Holder
	
	private static Map_Holder prepare_createmap(String param)
	{
		//Tokenize
		String[] tokens = param.split(",");
		//Extract
		int width = Integer.getInteger((tokens[0]));
		int height = Integer.getInteger((tokens[1]));
		char[] charArray = new char[width * height];
		for(int j = 0; j < height; j++)
		{
			for(int i = 0; i < width; i++)
			{
				charArray[i + j * width] = tokens[2].charAt(i + j * width);
				System.out.print(charArray[i + j * width]);
			}//rof
			System.out.println();
		}//rof
		Map_Holder map = new Map_Holder(width, height, charArray);
		
		return map;
	}//END command_createmap
}//END class TextRoomLoader

//EOF
